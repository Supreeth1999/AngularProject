Test Plan:
1. ACE->FNA->OCC->BCAPS
2. ACE->OCC->BCAPS
3. OPEN ADMIN->OCC
4. OCC Admin functionality
5. OCC DMOffer Admin
6. Retail No flow-> 1 appliaion->1 applicant(different product)
7. Retail No flow-> 1 applicaion -> 2 applicants(different product)
8. Retail Yes flow-> 1 application-> 1 applicant
8. Consumer RDS-> verbal->1 application-> 1 applicant
9. Consumer RDS-> verbal->1 application-> 2 applicants
10.Consumer RDS-> Electronic >1 application-> 1 applicant
11.Consumer RDS-> Consumer RDS->1 application-> 2 applicants
12.Private Bank flow
13.Add application
14.Credit limit increase.
15.occ notes addittion
16.Balance transfer
17.special mailing address
18.Existing customer
19.New customer
20.Business Credit card(Retail,RDS,Private,RSflow)
21.Credit center flow-->need input
22.Private flow card submission(Add application)




===============================
import { Component } from '@angular/core';
import { DomSanitizer, SecurityContext } from '@angular/platform-browser';

export class LocationModel {
  affiliate: string;
  zipcode: string;
  phoneNumber: string;
  branchNumber: number;
}

@Component({
  selector: 'app-location',
  templateUrl: './location.component.html'
})
export class LocationComponent {
  location: LocationModel;
  editlocation: LocationModel;

  constructor(private sanitizer: DomSanitizer) {}

  // Method to sanitize user-controllable fields in the location object
  sanitizeLocationData() {
    this.location.affiliate = this.sanitizer.sanitize(SecurityContext.HTML, this.location.affiliate) || '';
    this.location.zipcode = this.sanitizer.sanitize(SecurityContext.HTML, this.location.zipcode) || '';
    this.location.phoneNumber = this.sanitizer.sanitize(SecurityContext.HTML, this.location.phoneNumber) || '';
    this.location.branchNumber = this.sanitizer.sanitize(SecurityContext.HTML, String(this.location.branchNumber)) || '';
  }

  ngOnInit() {
    // Sanitize the data before assigning it to editlocation
    this.sanitizeLocationData();
    this.editlocation = Object.create(this.location);
  }
}




12. Checking or saving with credit card
